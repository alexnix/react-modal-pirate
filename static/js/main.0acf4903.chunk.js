(this["webpackJsonpreact-modal-pirate-example"]=this["webpackJsonpreact-modal-pirate-example"]||[]).push([[0],{11:function(e,n,t){e.exports=t(216)},12:function(e,n,t){},216:function(e,n,t){"use strict";t.r(n);t(12);var l=t(0),a=t.n(l),o=t(2),r=t.n(o),c=t(4),i=t(10),u=t.n(i);function m(){return(m=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e}).apply(this,arguments)}var s={default:{open:!1,component:null}},d={config:s,setConfig:null},p=Object(l.createContext)(d),E=function(){var e=Object(l.useContext)(p).setConfig;return function(n,t){return void 0===t&&(t={}),e((function(e){var l,a;return m({},e,((a={})[t.openIn||t.openInNew||"default"]={open:!0,component:n,style:null===(l=t)||void 0===l?void 0:l.style},a))}))}},h=function(e){var n=e.children,t=e.styles;t=m({default:{content:{},overlay:{}}},t);for(var o=Object(l.useState)(s),r=o[0],c=o[1],i=function(e){return function(){c((function(n){var t;return m({},n,((t={})[e]={open:!1,component:null},t))}))}},d=[],E=0,h=Object.entries(r);E<h.length;E++){var f=h[E],y=f[0],v=f[1],b=void 0,g=void 0;if("object"===typeof v.style){var M=v.style;b=M.content,g=M.overlay}else{var O=t[v.style||"default"];b=O.content,g=O.overlay}d.push(a.a.createElement("div",{key:y},a.a.createElement(u.a,{isOpen:v.open,onRequestClose:i(y),style:{content:b,overlay:g},ariaHideApp:!1},v.component)))}return a.a.createElement(p.Provider,{value:{config:r,setConfig:c}},d,n)},f=function(){return a.a.createElement("h1",null,"Hello World")},y=t(1),v=t.n(y),b=function(){var e=E();return a.a.createElement("div",null,a.a.createElement(v.a,{language:"jsx"},'import ModalProvider, { useOpen } from "react-modal-pirate"\n\nconst Demo: () => {\n  const openModal = useOpen()\n\n  return <button onClick={() => openModal(<h1>Hello World</h1>)}>Open</button>\n}\n\nconst App = () => {\n  return (\n    <ModalProvider>\n      <Demo/>\n    </ModalProvider>\n  )\n}'),a.a.createElement("button",{className:"button",onClick:function(){e(a.a.createElement(f,null))}},"Open Modal"))},g=function(){var e=E();return a.a.createElement("div",null,a.a.createElement(v.a,{language:"jsx"},"import ModalProvider, { useOpen } from \"react-modal-pirate\"\n\nconst Demo = () => {\n  const openModal = useOpen()\n\n  return (\n      <button\n        className='button'\n        onClick={() => \n          openModal(<Modal1 />, {\n            style: {\n              content: {\n                width: '300px',\n                maxWidth: '100%',\n                margin: 'auto',\n                padding: '50px',\n                textAlign: 'center'\n              },\n              overlay: {\n                background: 'rgba(255, 0, 0, .4)'\n              }\n            }\n          })\n        }\n      >\n        Open Modal\n      </button>\n  )\n}\n\nconst App = () => {\n  return (\n    <ModalProvider>\n      <Demo/>\n    </ModalProvider>\n  )\n}"),a.a.createElement("button",{className:"button",onClick:function(){e(a.a.createElement(f,null),{style:{content:{width:"300px",maxWidth:"100%",margin:"auto",padding:"50px",textAlign:"center"},overlay:{background:"rgba(255, 0, 0, .4)"}}})}},"Open Modal"))},M=function(){var e=E();return a.a.createElement("div",null,a.a.createElement(v.a,{language:"jsx"},"import ModalProvider, { useOpen } from \"react-modal-pirate\"\n\nconst Demo = () => {\n  const openModal = useOpen()\n  \n  return <button onClick={() => openModal(<h1>Hello World</h1>, {style:\"small\"})}>Open Modal</button>\n}\n\nconst App = () => {\n  rerturn (\n    <ModalProvider styles={{\n      small: {\n        content: {\n          height: 'fit-content',\n          width: '300px',\n          maxWidth: '100%',\n          position: 'unset'\n        },\n        overlay: {\n          background: 'rgba(0, 0, 0, .4)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }\n      }\n    }}>\n      <Demo/>\n    </ModalProvider>\n  )\n}"),a.a.createElement("button",{className:"button",onClick:function(){e(a.a.createElement(f,null),{style:"small"})}},"Open Modal"))},O=function(){var e=E();return a.a.createElement("div",null,a.a.createElement("h1",null,"First Modal"),a.a.createElement("button",{className:"button",onClick:function(){return e(a.a.createElement(f,null),{style:"small",openInNew:"foobar"})}},"Open Nested Modal"))},w=function(){var e=E();return a.a.createElement("div",null,a.a.createElement(v.a,{language:"jsx"},'import ModalProvider, { useOpen } from \'react-modal-pirate\'\n\nconst Modal = () => {\n  const openModal = useOpen()\n\n  return (\n    <div>\n      <h1>First Modal</h1>\n      <button onClick={() => openModal(<h1>Hello World</h1>, { style:"small", openInNew:"foobar" })}>Open Nested Modal</button>\n    </div>\n  )\n}\n\nconst Demo = () => {\n  const openModal = useOpen()\n\n  return <button onClick={() => openModal(<Modal/>)}>Open Modal</button>\n}\n\nconst App = () => {\n  return (\n    <ModalProvider styles={{\n      small: {\n        // See Styled Demo for the styles here\n      }\n    }}>\n      <Demo/>\n    </ModalProvider>\n  )\n}\n'),a.a.createElement("button",{className:"button",onClick:function(){return e(a.a.createElement(O,null))}},"Open Modal"))},N=function(){return a.a.createElement("div",null,a.a.createElement("code",null,"<ModalProvider styles={{}}></ModalProvider>"),a.a.createElement("h3",null,"Attributes"),a.a.createElement("table",null,a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",null,"Name"),a.a.createElement("th",null,"Type"),a.a.createElement("th",null,"Description"),a.a.createElement("th",null,"Example(s)"))),a.a.createElement("tbody",null,a.a.createElement("tr",null,a.a.createElement("td",null,"styles"),a.a.createElement("td",null,"Dict<StyleOption>"),a.a.createElement("td",null,"Define one or multiple set of StyleOption. A style set`s name is its key (will be used as the ",a.a.createElement("i",null,"style")," property in OpenOptions when opening a modal) and its value is an object with one or both of the ",a.a.createElement("i",null,"content")," and ",a.a.createElement("i",null,"overlay")," keys."),a.a.createElement("td",null,a.a.createElement("pre",null,JSON.stringify({small:{overlay:{background:"rgba(0, 0, 0, .4)"},content:{height:"min-content"}}},null,2)))))))},k=function(){return a.a.createElement("div",null,a.a.createElement("code",null,"const openModal = useOpen()"),a.a.createElement("h3",null,"Parameters"),a.a.createElement("i",null,"None"),a.a.createElement("h3",null,"Returns"),a.a.createElement("code",null,"(component: ReactNode, openOptions?: OpenOptions) =",">"," void"),a.a.createElement("h3",null,"Parameters"),a.a.createElement("table",null,a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",null,"Name"),a.a.createElement("th",null,"Type"),a.a.createElement("th",null,"Description"),a.a.createElement("th",null,"Example(s)"))),a.a.createElement("tbody",null,a.a.createElement("tr",null,a.a.createElement("td",null,"component"),a.a.createElement("td",null,"ReactNode"),a.a.createElement("td",null,"The React component that will be displayed in the modal."),a.a.createElement("td",null,"<div>Modal here</div>")),a.a.createElement("tr",null,a.a.createElement("td",null,"openOptions"),a.a.createElement("td",null,"OpenOptions"),a.a.createElement("td",null,"Options that controls the style of the modal, can be one of the style sets defined with ",a.a.createElement("i",null,"ModalProvider"),", or can be inline styles. Also if a new modal is needed, use the openInNew field. Use the openIn field to open in a specific modal, when multiple modals available."),a.a.createElement("td",null,a.a.createElement("pre",null,JSON.stringify({style:"small",openInNew:"foobar"},null,2)),a.a.createElement("hr",null),a.a.createElement("pre",null,JSON.stringify({style:{content:{},overlay:{}},openIn:"foobar"},null,2)))))))},x=function(){return a.a.createElement("div",null,a.a.createElement("code",null,"const closeModal = useClose()"),a.a.createElement("h3",null,"Parameters"),a.a.createElement("i",null,"None"),a.a.createElement("h3",null,"Returns"),a.a.createElement("code",null,"(name?: string) =",">"," void"),a.a.createElement("h3",null,"Parameters"),a.a.createElement("table",null,a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",null,"Name"),a.a.createElement("th",null,"Type"),a.a.createElement("th",null,"Description"),a.a.createElement("th",null,"Example(s)"))),a.a.createElement("tbody",null,a.a.createElement("tr",null,a.a.createElement("td",null,"name"),a.a.createElement("td",null,"string"),a.a.createElement("td",null,"Use this parameter to close a modal by its name. A modal in given a name when ",a.a.createElement("i",null,"openInNew")," option is used, for opening multiple modals at the same time."),a.a.createElement("td",null,"foobar")))))},C={Basic:a.a.createElement(b,null),Styled:a.a.createElement(M,null),"Inline Style":a.a.createElement(g,null),"Multiple Modals":a.a.createElement(w,null)},P={ModalProvider:a.a.createElement(N,null),useOpen:a.a.createElement(k,null),useClose:a.a.createElement(x,null)},j=function(){var e=Object(l.useState)("Basic"),n=Object(c.a)(e,2),t=n[0],o=n[1],r=Object(l.useState)(null),i=Object(c.a)(r,2),u=i[0],m=i[1];return a.a.createElement(h,{styles:{small:{content:{height:"fit-content",width:"300px",maxWidth:"100%",position:"unset"},overlay:{background:"rgba(0, 0, 0, .4)",display:"flex",alignItems:"center",justifyContent:"center"}}}},a.a.createElement("div",{className:"p-30"},a.a.createElement("h1",null,"react-modal-pirate"),a.a.createElement("p",null,"This library makes it (even) easier to crate modals in React, using ",a.a.createElement("a",{href:"https://www.npmjs.com/package/react-modal",target:"_new"},"react-modal")," under the hood."),a.a.createElement("p",null,"The core idea is that there is no need to have more then one"," ",a.a.createElement("i",null,"<Modal>")," tag in any application*. Therefore, react-modal-pirate abstracts away the ",a.a.createElement("i",null,"<Modal>")," tag and offers easy to use React hooks to open and close modals."),a.a.createElement("p",null,"Similarly, there is no need to write the modal CSS style more than once, therefore react-modal-pirate gives a way to define the style sets in its root tag. When opening a modal the style set can be specified by its name. There is also the option to have inline styles for each modal, though this should be a very rare case and is not probably not a good choice for most scenarios."),a.a.createElement("p",null,"* in the rare cases when nested modals are needed, this means multiple"," ",a.a.createElement("i",null,"<Modal>")," tags will be needed. react-modal-pirate has can create more then one ",a.a.createElement("i",null,"<Modal>")," tag by specifying a proper setting when opening the modal, namely the ",a.a.createElement("i",null,"openInNew")," option."),a.a.createElement("h2",null,"Installation"),a.a.createElement("h3",null,"yarn add react-modal-pirate"),"or",a.a.createElement("h3",null,"npm install --save react-modal-pirate")),a.a.createElement("div",{className:"flex-row"},a.a.createElement("div",{className:"p-30"},a.a.createElement("h3",null,"Demos"),a.a.createElement("ul",{className:"menu"},Object.keys(C).map((function(e){return a.a.createElement("li",{key:e,onClick:(n=e,function(){o(n),m(null)})},e);var n}))),a.a.createElement("h3",null,"APIs"),a.a.createElement("ul",{className:"menu"},Object.keys(P).map((function(e){return a.a.createElement("li",{onClick:(n=e,function(){o(null),m(n)})},e);var n})))),a.a.createElement("div",{className:"p-30"},a.a.createElement("h3",null,t||u),t?C[t]:P[u])))};r.a.render(a.a.createElement(j,null),document.getElementById("root"))}},[[11,1,2]]]);
//# sourceMappingURL=main.0acf4903.chunk.js.map